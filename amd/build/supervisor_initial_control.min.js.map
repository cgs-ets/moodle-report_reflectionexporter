{"version":3,"file":"supervisor_initial_control.min.js","sources":["../src/supervisor_initial_control.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Provides the report_reflectionexporter/create_control module\r\n *\r\n * @package   report_reflectionexporter\r\n * @category  output\r\n * @copyright 2022 Veronica Bermegui\r\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n/**\r\n * @module report_reflectionexporter/controls\r\n */\r\ndefine(['jquery'], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Initializes the controls.\r\n     */\r\n    function init(data) {\r\n\r\n        const control = new SupervisorInitialControl(data);\r\n        control.main();\r\n\r\n    }\r\n\r\n    // Constructor.\r\n    function SupervisorInitialControl(data) {\r\n\r\n        var self = this;\r\n        self.data = data;\r\n\r\n    }\r\n\r\n    SupervisorInitialControl.prototype.main = function () {\r\n        var self = this;\r\n        self.initListeners();\r\n    };\r\n\r\n    // Add event listener to the select\r\n    SupervisorInitialControl.prototype.initListeners = function () {\r\n        const self = this;\r\n        // Chek there are  groups in the course.\r\n        if (document.getElementById('id_coursegroups') != null) {\r\n\r\n            document.getElementById('id_coursegroups').addEventListener('change', (function (e) {\r\n                // Add selected teachers to the JSON.\r\n                $(e.target).find('option:selected').each(function (index, option) {\r\n                    const groupid = option.value;\r\n                    // look for the teacher in the group.\r\n                    const teacher = document.querySelectorAll(`[id^= id_teacher_${groupid}]`)[0];\r\n                    // Get the div that has the id fitem_id_teacher_groupid_techerid.\r\n                    // For some reason the id in moodle uat is id_teacher_groupid_teacherid_label\r\n                    let teacherid = teacher.getAttribute('id').replace('_label','');\r\n                    console.log(teacherid);\r\n\r\n                    const dEl = document.getElementById(`fitem_${teacherid}`);\r\n                    teacherid = teacherid.split('_').findLast(e => { if (!isNaN(parseInt(e))) return e });\r\n                    dEl.classList.remove('teacher-initial-field-hide');\r\n                    const details = {\r\n                        groupid: groupid,\r\n                        teacherid: teacherid,\r\n                        delete: 0\r\n                    };\r\n                    self.updateTeacherSelectionJSON(details);\r\n                    //self.updateStudentSelectionJSON(details);\r\n                });\r\n\r\n                // Control that the unselect elements are not part of the JSON. (Example: Selected all first and then unselect some)\r\n                $('#id_coursegroups option:not(:selected)').each(function (index, option) {\r\n                    const groupid = option.value;\r\n                    // look for the teacher in the group.\r\n                    const teacher = document.querySelectorAll(`[id^= id_teacher_${groupid}]`)[0];\r\n                    // Get the div that has the id fitem_id_teacher_groupid_techerid.\r\n                    // For some reason the id in moodle uat is id_teacher_groupid_teacherid_label\r\n                    let teacherid = teacher.getAttribute('id').replace('_label','');\r\n                    const dEl = document.getElementById(`fitem_${teacherid}`);\r\n                    teacherid = teacherid.split('_').findLast(e => { if (!isNaN(parseInt(e))) return e });\r\n                    dEl.classList.add('teacher-initial-field-hide');\r\n                    const details = {\r\n                        groupid: groupid,\r\n                        teacherid: teacherid,\r\n                        delete: 1\r\n                    };\r\n                    self.updateTeacherSelectionJSON(details);\r\n\r\n\r\n                })\r\n\r\n            }).bind(self));\r\n\r\n            // Add listener to the teachers initial inputs to pick up any changes done.\r\n            const supervisorintials = document.querySelectorAll(\"[id^= id_teacher_]\");\r\n            $(supervisorintials).each(function (index, sinput) {\r\n                sinput.addEventListener('change', function (e) {\r\n                    let teacherid = e.target.getAttribute('id');\r\n                    teacherid = teacherid.split('_');\r\n                    teacherid = teacherid[teacherid.length - 1];\r\n                    console.log(e.target.value)\r\n                    const data = {\r\n                        id: teacherid,\r\n                        si: e.target.value\r\n                    };\r\n                    self.updateTeacherInitial(data);\r\n                });\r\n            }).bind(self);\r\n        }\r\n    }\r\n\r\n    SupervisorInitialControl.prototype.updateTeacherSelectionJSON = function (details) {\r\n        let jsoninput = JSON.parse(document.getElementById('id_groupselectionjsonaux').value);\r\n        let jsoninputcurrent = JSON.parse(document.getElementById('id_groupselectionjson').value);\r\n\r\n        if (details.delete == 1) {\r\n            // We already put some data inthe currentjson to get to this point\r\n            jsoninputcurrent = jsoninputcurrent.filter(function (input) {\r\n                if (input.groupid != details.groupid) return input;\r\n            }, details);\r\n            document.getElementById('id_groupselectionjson').value = JSON.stringify(jsoninputcurrent);\r\n        } else {\r\n\r\n            // check if its not already  there\r\n            if (jsoninputcurrent.find(input => input.groupid == details.groupid) == undefined) {\r\n\r\n                jsoninput = jsoninput.filter(function (input) {\r\n                    if (input.groupid == details.groupid) return input;\r\n                }, details);\r\n\r\n                jsoninputcurrent.push(jsoninput[0]);\r\n            }\r\n            document.getElementById('id_groupselectionjson').value = JSON.stringify(jsoninputcurrent);\r\n        }\r\n\r\n    }\r\n\r\n    SupervisorInitialControl.prototype.updateTeacherInitial = function (data) {\r\n        console.log(data);\r\n        let jsoninput = JSON.parse(document.getElementById('id_groupselectionjsonaux').value);\r\n        let jsoninputcurrent = JSON.parse(document.getElementById('id_groupselectionjson').value);\r\n\r\n        // We need to update both jsons\r\n        jsoninputcurrent.forEach(function (teacher) {\r\n            if (teacher.id == data.id) {\r\n                teacher.si = data.si;\r\n            }\r\n        }, data);\r\n\r\n        jsoninput.forEach(function (teacher) {\r\n            if (teacher.id == data.id) {\r\n                teacher.si = data.si;\r\n\r\n            }\r\n        }, data);\r\n\r\n        document.getElementById('id_groupselectionjson').value = JSON.stringify(jsoninputcurrent);\r\n        document.getElementById('id_groupselectionjsonaux').value = JSON.stringify(jsoninput);\r\n\r\n    }\r\n\r\n\r\n    return {\r\n        init: init\r\n    };\r\n});"],"names":["define","$","SupervisorInitialControl","data","this","prototype","main","initListeners","self","document","getElementById","addEventListener","e","target","find","each","index","option","groupid","value","teacherid","querySelectorAll","getAttribute","replace","console","log","dEl","split","findLast","isNaN","parseInt","classList","remove","details","delete","updateTeacherSelectionJSON","add","bind","supervisorintials","sinput","length","id","si","updateTeacherInitial","jsoninput","JSON","parse","jsoninputcurrent","filter","input","stringify","undefined","push","forEach","teacher","init"],"mappings":"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"}