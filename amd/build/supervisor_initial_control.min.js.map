{"version":3,"file":"supervisor_initial_control.min.js","sources":["../src/supervisor_initial_control.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Provides the report_reflectionexporter/create_control module\n *\n * @package   report_reflectionexporter\n * @category  output\n * @copyright 2022 Veronica Bermegui\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @module report_reflectionexporter/controls\n */\ndefine(['jquery'], function ($) {\n    'use strict';\n\n    /**\n     * Initializes the controls.\n     */\n    function init(data) {\n\n        const control = new SupervisorInitialControl(data);\n        control.main();\n\n    }\n\n    // Constructor.\n    function SupervisorInitialControl(data) {\n\n        var self = this;\n        self.data = data;\n\n    }\n\n    SupervisorInitialControl.prototype.main = function () {\n        var self = this;\n        self.initListeners();\n    };\n\n    // Add event listener to the select\n    SupervisorInitialControl.prototype.initListeners = function () {\n        const self = this;\n        // Chek there are  groups in the course.\n        if (document.getElementById('id_coursegroups') != null) {\n\n            document.getElementById('id_coursegroups').addEventListener('change', (function (e) {\n                // Add selected teachers to the JSON.\n                $(e.target).find('option:selected').each(function (index, option) {\n                    const groupid = option.value;\n                    // look for the teacher in the group.\n                    const teacher = document.querySelectorAll(`[id^= id_teacher_${groupid}]`)[0];\n                    // Get the div that has the id fitem_id_teacher_groupid_techerid.\n                    // For some reason the id in moodle uat is id_teacher_groupid_teacherid_label\n                    let teacherid = teacher.getAttribute('id').replace('_label','');\n                    console.log(teacherid);\n\n                    const dEl = document.getElementById(`fitem_${teacherid}`);\n                    teacherid = teacherid.split('_').findLast(e => { if (!isNaN(parseInt(e))) return e });\n                    dEl.classList.remove('teacher-initial-field-hide');\n                    const details = {\n                        groupid: groupid,\n                        teacherid: teacherid,\n                        delete: 0\n                    };\n                    self.updateTeacherSelectionJSON(details);\n                    //self.updateStudentSelectionJSON(details);\n                });\n\n                // Control that the unselect elements are not part of the JSON. (Example: Selected all first and then unselect some)\n                $('#id_coursegroups option:not(:selected)').each(function (index, option) {\n                    const groupid = option.value;\n                    // look for the teacher in the group.\n                    const teacher = document.querySelectorAll(`[id^= id_teacher_${groupid}]`)[0];\n                    // Get the div that has the id fitem_id_teacher_groupid_techerid.\n                    // For some reason the id in moodle uat is id_teacher_groupid_teacherid_label\n                    let teacherid = teacher.getAttribute('id').replace('_label','');\n                    const dEl = document.getElementById(`fitem_${teacherid}`);\n                    teacherid = teacherid.split('_').findLast(e => { if (!isNaN(parseInt(e))) return e });\n                    dEl.classList.add('teacher-initial-field-hide');\n                    const details = {\n                        groupid: groupid,\n                        teacherid: teacherid,\n                        delete: 1\n                    };\n                    self.updateTeacherSelectionJSON(details);\n\n\n                })\n\n            }).bind(self));\n\n            // Add listener to the teachers initial inputs to pick up any changes done.\n            const supervisorintials = document.querySelectorAll(\"[id^= id_teacher_]\");\n            $(supervisorintials).each(function (index, sinput) {\n                sinput.addEventListener('change', function (e) {\n                    let teacherid = e.target.getAttribute('id');\n                    teacherid = teacherid.split('_');\n                    teacherid = teacherid[teacherid.length - 1];\n                    console.log(e.target.value)\n                    const data = {\n                        id: teacherid,\n                        si: e.target.value\n                    };\n                    self.updateTeacherInitial(data);\n                });\n            }).bind(self);\n        }\n    }\n\n    SupervisorInitialControl.prototype.updateTeacherSelectionJSON = function (details) {\n        let jsoninput = JSON.parse(document.getElementById('id_groupselectionjsonaux').value);\n        let jsoninputcurrent = JSON.parse(document.getElementById('id_groupselectionjson').value);\n\n        if (details.delete == 1) {\n            // We already put some data inthe currentjson to get to this point\n            jsoninputcurrent = jsoninputcurrent.filter(function (input) {\n                if (input.groupid != details.groupid) return input;\n            }, details);\n            document.getElementById('id_groupselectionjson').value = JSON.stringify(jsoninputcurrent);\n        } else {\n\n            // check if its not already  there\n            if (jsoninputcurrent.find(input => input.groupid == details.groupid) == undefined) {\n\n                jsoninput = jsoninput.filter(function (input) {\n                    if (input.groupid == details.groupid) return input;\n                }, details);\n\n                jsoninputcurrent.push(jsoninput[0]);\n            }\n            document.getElementById('id_groupselectionjson').value = JSON.stringify(jsoninputcurrent);\n        }\n\n    }\n\n    SupervisorInitialControl.prototype.updateTeacherInitial = function (data) {\n        console.log(data);\n        let jsoninput = JSON.parse(document.getElementById('id_groupselectionjsonaux').value);\n        let jsoninputcurrent = JSON.parse(document.getElementById('id_groupselectionjson').value);\n\n        // We need to update both jsons\n        jsoninputcurrent.forEach(function (teacher) {\n            if (teacher.id == data.id) {\n                teacher.si = data.si;\n            }\n        }, data);\n\n        jsoninput.forEach(function (teacher) {\n            if (teacher.id == data.id) {\n                teacher.si = data.si;\n\n            }\n        }, data);\n\n        document.getElementById('id_groupselectionjson').value = JSON.stringify(jsoninputcurrent);\n        document.getElementById('id_groupselectionjsonaux').value = JSON.stringify(jsoninput);\n\n    }\n\n\n    return {\n        init: init\n    };\n});"],"names":["define","$","SupervisorInitialControl","data","this","prototype","main","initListeners","self","document","getElementById","addEventListener","e","target","find","each","index","option","groupid","value","teacherid","querySelectorAll","getAttribute","replace","console","log","dEl","split","findLast","isNaN","parseInt","classList","remove","details","delete","updateTeacherSelectionJSON","add","bind","supervisorintials","sinput","length","id","si","updateTeacherInitial","jsoninput","JSON","parse","jsoninputcurrent","filter","input","stringify","undefined","push","forEach","teacher","init"],"mappings":";;;;;;;;AA2BAA,8DAAO,CAAC,WAAW,SAAUC,YAchBC,yBAAyBC,MAEnBC,KACND,KAAOA,YAIhBD,yBAAyBG,UAAUC,KAAO,WAC3BF,KACNG,iBAITL,yBAAyBG,UAAUE,cAAgB,eACzCC,KAAOJ,QAEqC,MAA9CK,SAASC,eAAe,mBAA4B,CAEpDD,SAASC,eAAe,mBAAmBC,iBAAiB,SAAW,SAAUC,GAE7EX,EAAEW,EAAEC,QAAQC,KAAK,mBAAmBC,MAAK,SAAUC,MAAOC,YAChDC,QAAUD,OAAOE,MAKnBC,UAHYX,SAASY,4CAAqCH,cAAY,GAGlDI,aAAa,MAAMC,QAAQ,SAAS,IAC5DC,QAAQC,IAAIL,eAENM,IAAMjB,SAASC,+BAAwBU,YAC7CA,UAAYA,UAAUO,MAAM,KAAKC,UAAS,SAAAhB,OAAYiB,MAAMC,SAASlB,IAAK,OAAOA,KACjFc,IAAIK,UAAUC,OAAO,kCACfC,QAAU,CACZf,QAASA,QACTE,UAAWA,UACXc,OAAQ,GAEZ1B,KAAK2B,2BAA2BF,YAKpChC,EAAE,0CAA0Cc,MAAK,SAAUC,MAAOC,YACxDC,QAAUD,OAAOE,MAKnBC,UAHYX,SAASY,4CAAqCH,cAAY,GAGlDI,aAAa,MAAMC,QAAQ,SAAS,IACtDG,IAAMjB,SAASC,+BAAwBU,YAC7CA,UAAYA,UAAUO,MAAM,KAAKC,UAAS,SAAAhB,OAAYiB,MAAMC,SAASlB,IAAK,OAAOA,KACjFc,IAAIK,UAAUK,IAAI,kCACZH,QAAU,CACZf,QAASA,QACTE,UAAWA,UACXc,OAAQ,GAEZ1B,KAAK2B,2BAA2BF,aAKrCI,KAAK7B,WAGF8B,kBAAoB7B,SAASY,iBAAiB,sBACpDpB,EAAEqC,mBAAmBvB,MAAK,SAAUC,MAAOuB,QACvCA,OAAO5B,iBAAiB,UAAU,SAAUC,OACpCQ,UAAYR,EAAEC,OAAOS,aAAa,MAEtCF,WADAA,UAAYA,UAAUO,MAAM,MACNP,UAAUoB,OAAS,GACzChB,QAAQC,IAAIb,EAAEC,OAAOM,WACfhB,KAAO,CACTsC,GAAIrB,UACJsB,GAAI9B,EAAEC,OAAOM,OAEjBX,KAAKmC,qBAAqBxC,YAE/BkC,KAAK7B,QAIhBN,yBAAyBG,UAAU8B,2BAA6B,SAAUF,aAClEW,UAAYC,KAAKC,MAAMrC,SAASC,eAAe,4BAA4BS,OAC3E4B,iBAAmBF,KAAKC,MAAMrC,SAASC,eAAe,yBAAyBS,OAE7D,GAAlBc,QAAQC,QAERa,iBAAmBA,iBAAiBC,QAAO,SAAUC,UAC7CA,MAAM/B,SAAWe,QAAQf,QAAS,OAAO+B,QAC9ChB,SACHxB,SAASC,eAAe,yBAAyBS,MAAQ0B,KAAKK,UAAUH,oBAIAI,MAApEJ,iBAAiBjC,MAAK,SAAAmC,cAASA,MAAM/B,SAAWe,QAAQf,aAExD0B,UAAYA,UAAUI,QAAO,SAAUC,UAC/BA,MAAM/B,SAAWe,QAAQf,QAAS,OAAO+B,QAC9ChB,SAEHc,iBAAiBK,KAAKR,UAAU,KAEpCnC,SAASC,eAAe,yBAAyBS,MAAQ0B,KAAKK,UAAUH,oBAKhF7C,yBAAyBG,UAAUsC,qBAAuB,SAAUxC,MAChEqB,QAAQC,IAAItB,UACRyC,UAAYC,KAAKC,MAAMrC,SAASC,eAAe,4BAA4BS,OAC3E4B,iBAAmBF,KAAKC,MAAMrC,SAASC,eAAe,yBAAyBS,OAGnF4B,iBAAiBM,SAAQ,SAAUC,SAC3BA,QAAQb,IAAMtC,KAAKsC,KACnBa,QAAQZ,GAAKvC,KAAKuC,MAEvBvC,MAEHyC,UAAUS,SAAQ,SAAUC,SACpBA,QAAQb,IAAMtC,KAAKsC,KACnBa,QAAQZ,GAAKvC,KAAKuC,MAGvBvC,MAEHM,SAASC,eAAe,yBAAyBS,MAAQ0B,KAAKK,UAAUH,kBACxEtC,SAASC,eAAe,4BAA4BS,MAAQ0B,KAAKK,UAAUN,YAKxE,CACHW,cA9IUpD,MAEM,IAAID,yBAAyBC,MACrCG"}