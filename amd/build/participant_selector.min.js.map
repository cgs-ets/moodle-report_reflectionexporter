{"version":3,"file":"participant_selector.min.js","sources":["../src/participant_selector.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Custom auto-complete adapter to load users from the assignment list_participants webservice.\r\n *\r\n * @module     report_reflectionexporter/participants_selector\r\n * @copyright  2015 Damyon Wiese <damyon@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(['core/ajax', 'jquery', 'core/templates'], function(ajax, $, templates) {\r\n\r\n\r\n    return /** @alias module:report_reflectionexporter/participants_selector */ {\r\n\r\n        // Public variables and functions.\r\n        /**\r\n         * Process the results returned from transport (convert to value + label)\r\n         *\r\n         * @method processResults\r\n         * @param {String} selector\r\n         * @param {Array} data\r\n         * @return {Array}\r\n         */\r\n        processResults: function(selector, data) {\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Fetch results based on the current query. This also renders each result from a template before returning them.\r\n         *\r\n         * @method transport\r\n         * @param {String} selector Selector for the original select element\r\n         * @param {String} query Current search string\r\n         * @param {Function} success Success handler\r\n         * @param {Function} failure Failure handler\r\n         */\r\n        transport: function(selector, query, success, failure) {\r\n            var select = this._region.find('[data-action=change-user]');\r\n            var reflecid = select.attr('data-rid');\r\n\r\n            var select = this._region.find('[data-action=change-user]');\r\n            var reflecid = select.attr('data-rid');\r\n\r\n            ajax.call([{\r\n                methodname: 'report_reflectionexporter_list_participants',\r\n                args: {\r\n                    rid: reflecid,\r\n                }\r\n            }])[0].then(function(results) {\r\n                var promises = [];\r\n                var identityfields = $('[data-showuseridentity]').data('showuseridentity').split(',');\r\n\r\n                // We got the results, now we loop over them and render each one from a template.\r\n                $.each(results, function(index, user) {\r\n                    var ctx = user,\r\n                        identity = [],\r\n                        show = true;\r\n\r\n                    if (show) {\r\n                        $.each(identityfields, function(i, k) {\r\n                            if (typeof user[k] !== 'undefined' && user[k] !== '') {\r\n                                ctx.hasidentity = true;\r\n                                identity.push(user[k]);\r\n                            }\r\n                        });\r\n                        ctx.identity = identity.join(', ');\r\n                        promises.push(templates.render('report_reflectionexporter/list_participant_user_summary', ctx).then(function(html) {\r\n                            return {value: user.id, label: html};\r\n                        }));\r\n                    }\r\n                });\r\n                // Do the dance for $.when()\r\n                return $.when.apply($, promises);\r\n            }).then(function() {\r\n                var users = [];\r\n\r\n                // Determine if we've been passed any arguments..\r\n                if (arguments[0]) {\r\n                    // Undo the $.when() dance from arguments object into an array..\r\n                    users = Array.prototype.slice.call(arguments);\r\n                }\r\n\r\n                success(users);\r\n                return;\r\n            }).catch(failure);\r\n        }\r\n    };\r\n});\r\n"],"names":["define","ajax","$","templates","processResults","selector","data","transport","query","success","failure","reflecid","this","_region","find","attr","call","methodname","args","rid","then","results","promises","identityfields","split","each","index","user","ctx","identity","i","k","hasidentity","push","join","render","html","value","id","label","when","apply","users","arguments","Array","prototype","slice","catch"],"mappings":";;;;;;;AAsBAA,wDAAO,CAAC,YAAa,SAAU,mBAAmB,SAASC,KAAMC,EAAGC,iBAGY,CAWxEC,eAAgB,SAASC,SAAUC,aACxBA,MAYXC,UAAW,SAASF,SAAUG,MAAOC,QAASC,aAEtCC,SADSC,KAAKC,QAAQC,KAAK,6BACTC,KAAK,YAGvBJ,SADSC,KAAKC,QAAQC,KAAK,6BACTC,KAAK,YAE3Bd,KAAKe,KAAK,CAAC,CACPC,WAAY,8CACZC,KAAM,CACFC,IAAKR,aAET,GAAGS,MAAK,SAASC,aACbC,SAAW,GACXC,eAAiBrB,EAAE,2BAA2BI,KAAK,oBAAoBkB,MAAM,YAGjFtB,EAAEuB,KAAKJ,SAAS,SAASK,MAAOC,UACxBC,IAAMD,KACNE,SAAW,GAIX3B,EAAEuB,KAAKF,gBAAgB,SAASO,EAAGC,QACR,IAAZJ,KAAKI,IAAkC,KAAZJ,KAAKI,KACvCH,IAAII,aAAc,EAClBH,SAASI,KAAKN,KAAKI,QAG3BH,IAAIC,SAAWA,SAASK,KAAK,MAC7BZ,SAASW,KAAK9B,UAAUgC,OAAO,0DAA2DP,KAAKR,MAAK,SAASgB,YAClG,CAACC,MAAOV,KAAKW,GAAIC,MAAOH,aAKpClC,EAAEsC,KAAKC,MAAMvC,EAAGoB,aACxBF,MAAK,eACAsB,MAAQ,GAGRC,UAAU,KAEVD,MAAQE,MAAMC,UAAUC,MAAM9B,KAAK2B,YAGvClC,QAAQiC,UAETK,MAAMrC"}