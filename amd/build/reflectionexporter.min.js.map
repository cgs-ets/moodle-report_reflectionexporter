{"version":3,"sources":["../src/reflectionexporter.js"],"names":["define","$","Ajax","Log","PDFLib","Controls","data","Y","log","prototype","main","getreflectionsjson","self","call","methodname","args","rid","done","response","processReflections","JSON","parse","reflecjson","pdfs","savePDFInDB","fail","reason","error","users","studentpdfs","i","length","fillformAndSave","pdf","student","uid","reflections","userid","push","user","formUrl","fileurl","fetch","then","res","arrayBuffer","formPdfBytes","PDFDocument","load","pdfDoc","form","getForm","fields","getFields","forEach","field","setFormFields","saveAsBase64","fieldName","getName","getTextField","setText","id","onlinetext","getDropdown","select","month","dp","si","stringify","console","init","control"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n *\n *\n * @package    report\n * @subpackage reflectionexporter\n * @copyright  2022 Veronica Bermegui\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n    \"jquery\",\n    \"core/ajax\",\n    \"core/log\",\n    \"report_reflectionexporter/pdf-lib\",\n], function ($, Ajax, Log, PDFLib) {\n    \"use strict\";\n\n    function init(data) {\n        Y.log(\"report_reflectionexporter init...\");\n\n        var control = new Controls(data);\n        control.main();\n    }\n\n    function Controls(data) {\n        Y.log(\"report_reflectionexporter init...\");\n        this.data = data;\n    }\n\n    /**\n     * Run the controller.\n     *\n     */\n    Controls.prototype.main = function () {\n        Y.log(\"report_reflectionexporter main...\");\n        // Get the reflections data.\n        this.getreflectionsjson();\n\n    };\n\n    Controls.prototype.getreflectionsjson =  function () {\n        var self = this;\n        Ajax.call([{\n            methodname: \"report_reflectionexporter_get_reflections\",\n            args: {\n                rid: this.data.rid,\n            },\n            done: async function (response) {\n                const pdfs = await self.processReflections(JSON.parse(response.reflecjson));\n                self.savePDFInDB(pdfs);\n            },\n            fail: function (reason) {\n                Log.error(reason);\n            },\n        }, ]);\n    };\n\n    // Returns an array with the users PDF enconded in base64\n    Controls.prototype.processReflections = async function (users) {\n        Y.log(\"processReflections\");\n        const studentpdfs = [];\n        for (var i = 0; i < users.length; i++) {\n            const pdf = await this.fillformAndSave(users[i]);\n            \n            const student = {\n                uid: users[i].reflections[0].userid,\n                pdf: pdf\n            };\n\n            studentpdfs.push(student);\n\n        }\n        Y.log(studentpdfs);\n        return studentpdfs;\n\n    };\n    // Fill PDF with data and return the generted file in base64\n    Controls.prototype.fillformAndSave = async function (user) {\n        const formUrl = this.data.fileurl;\n        const formPdfBytes = await fetch(formUrl).then((res) => res.arrayBuffer());\n        const pdfDoc = await PDFLib.PDFDocument.load(formPdfBytes);\n        const form = pdfDoc.getForm();\n        const fields = form.getFields();\n\n        fields.forEach((field) => {\n            this.setFormFields(user, form, field);\n        });\n\n        // Return the base64 PDF\n        return await pdfDoc.saveAsBase64();\n\n        // const pdfDataUri = await pdfDoc.saveAsBase64({\n        //     dataUri: true\n        // });\n\n        // //console.log(pdfDataUri);\n        // document.getElementById(\"pdf\").src = pdfDataUri;\n\n    };\n\n    Controls.prototype.setFormFields = async function (user, form, field) {\n        // Fields to complete for the student:\n        //Candidate personal code: Text1\n        //First reflection session: Text3\n        //Month first page: Dropdown1\n        // DP: Dropdown2\n        // supervisor id: Text5\n        // Second reflection: Text6\n        //Month second page: Dropdown3\n        // DP: Dropdown4\n        // supervisor id: Text8\n        // third reflection: Text9\n        //Month third page: Dropdown5\n        // DP: Dropdown6\n        // supervisor id: Text11\n        const fieldName = field.getName();\n        switch (fieldName) {\n            case \"Text1\": //Candaite personal code\n                Y.log(user);\n                form.getTextField(fieldName).setText(String(user.id));\n                break;\n            case \"Text3\": // First reflection session (1st page)\n                form.getTextField(fieldName).setText(JSON.parse(user.reflections[0].onlinetext));\n                break;\n            case \"Dropdown1\": // Month\n                form.getDropdown(fieldName).select(user.reflections[0].month);\n                break;\n            case \"Dropdown2\": // DP\n                form.getDropdown(fieldName).select(String(user.dp)); // just to make sure that we are sending a string\n                break;\n            case \"Text5\": // Supervisor initials\n                form.getTextField(fieldName).setText(String(user.si));\n                break;\n            case \"Text6\": // Interim reflection (2nd page)\n                form.getTextField(fieldName).setText(JSON.parse(user.reflections[1].onlinetext));\n                break;\n            case \"Dropdown3\": // Month\n                form.getDropdown(fieldName).select(user.reflections[1].month);\n                break;\n            case \"Dropdown4\": // DP\n                form.getDropdown(fieldName).select(String(user.dp));\n                break;\n            case \"Text8\": // Supervisor initials\n                form.getTextField(fieldName).setText(String(user.si));\n                break;\n            case \"Text9\": // Final reflection (3rd page)\n                form.getTextField(fieldName).setText(JSON.parse(user.reflections[2].onlinetext));\n                break;\n            case \"Dropdown5\": // Month\n                form.getDropdown(fieldName).select(user.reflections[2].month);\n                break;\n            case \"Dropdown6\": //DP //dp\n                form.getDropdown(fieldName).select(String(user.dp));\n                break;\n            case \"Text11\": // Supervisor initials\n                form.getTextField(fieldName).setText(String(user.si));\n                break;\n        }\n    };\n\n    // Call WS to save pdf data in DB.\n    Controls.prototype.savePDFInDB = function (pdfs) {\n        Y.log(\"savePDFInDB\");\n        Y.log(pdfs);\n        Ajax.call([{\n            methodname: \"report_reflectionexporter_save_pdfbase64\",\n            args: {\n                pdfs:JSON.stringify(pdfs),\n            },\n            done: function (response) {\n                console.log(response);\n            },\n            fail: function (reason) {\n                Log.error(reason);\n            },\n        }, ]);\n    }\n\n\n\n    return {\n        init: init,\n    };\n});"],"file":"reflectionexporter.min.js"}