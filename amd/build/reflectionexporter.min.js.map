{"version":3,"file":"reflectionexporter.min.js","sources":["../src/reflectionexporter.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n *\n *\n * @package    report\n * @subpackage reflectionexporter\n * @copyright  2022 Veronica Bermegui\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n    \"jquery\",\n    \"core/ajax\",\n    \"core/log\",\n    \"report_reflectionexporter/pdf-lib\",\n    \"core/templates\",\n\n], function ($, Ajax, Log, PDFLib, Templates) {\n    \"use strict\";\n\n    function init(data) {\n        var control = new Controls(data);\n        control.main();\n    }\n\n    function Controls(data) {\n        this.data = data;\n        this.CANDIDATE_PERSONAL_CODE = 'Text1';\n        this.FIRST_REFLECTION_SESSION = 'Text3';\n        this.FIRST_REFLECTION_SESSION_SUPERVISOR_INITIALS = 'Text5';\n        this.INTERIM_REFLECTION = 'Text6';\n        this.INTERIM_REFLECTION_SUPERVISOR_INITIALS = 'Text8';\n        this.FINAL_REFLECTION = 'Text9';\n        this.FINAL_REFLECTION_SUPERVISOR_INITIALS = 'Text11';\n        this.SUPERVISOR_COMMENT = 'Text12';\n    }\n\n    /**\n     * Run the controller.\n     *\n     */\n    Controls.prototype.main = function () {\n        // Get the reflections data.\n\n        if (this.data.new == 1) {\n            this.getreflectionsjson()\n\n        } else {\n            this.getreflectionspdf();\n        }\n\n    };\n\n    Controls.prototype.getreflectionspdf = function () {\n\n        this.displayTemplate();\n    }\n\n    Controls.prototype.getreflectionsjson = async function () {\n        var self = this;\n\n        Ajax.call([{\n            methodname: \"report_reflectionexporter_get_reflections\",\n            args: {\n                rid: this.data.rid,\n            },\n            done: async function (response) {\n                const users = JSON.parse(response.reflecjson);\n                const pdfs = await self.processReflections(users);\n\n                self.savePDFInDB(pdfs);\n\n            },\n            fail: function (reason) {\n                Log.error(reason);\n            },\n        },]);\n    };\n\n    // Returns an array with the users PDF enconded in base64\n    Controls.prototype.processReflections = async function (users) {\n        const studentpdfs = [];\n        for (var i = 0; i < users.length; i++) {\n            const pdf = await this.fillformAndSave(users[i]);\n\n            const student = {\n                uid: users[i].reflections[0].userid,\n                courseid: this.data.cid,\n                rid: this.data.rid,\n                pdf: pdf\n            };\n\n            studentpdfs.push(student);\n\n        }\n\n        return studentpdfs;\n\n    };\n    // Fill PDF with data and return the generted file in base64\n    Controls.prototype.fillformAndSave = async function (user) {\n        const formUrl = this.data.fileurl;\n        const formPdfBytes = await fetch(formUrl).then((res) => res.arrayBuffer());\n        const pdfDoc = await PDFLib.PDFDocument.load(formPdfBytes);\n        const form = pdfDoc.getForm();\n        const fields = form.getFields();\n\n        fields.forEach((field) => {\n            this.setFormFields(user, form, field);\n        });\n\n        // Return the base64 PDF\n        return await pdfDoc.saveAsBase64();\n\n    };\n    /**\n     * Fields to complete for the student\n     *  Candidate personal code: Text1\n     * First reflection session: Text3\n     *  Month first page: Dropdown1\n     *  DP: Dropdown2\n     *  supervisor id: Text5\n     * Second reflection: Text6\n     *  Month second page: Dropdown3\n     *  DP: Dropdown4\n     *  supervisor id: Text8\n     *  third reflection: Text9\n     *  Month third page: Dropdown5\n     *  DP: Dropdown6\n     *  supervisor id: Text11\n     * \n     * @param {*} user \n     * @param {*} form \n     * @param {*} field \n     */\n    Controls.prototype.setFormFields = async function (user, form, field) {\n        var self = this;\n        const fieldName = field.getName();\n        console.log(user);\n        switch (fieldName) {\n            case self.CANDIDATE_PERSONAL_CODE: //Candaite personal code \"Text1\"\n                Y.log(user);\n                form.getTextField(fieldName).setText(String(user.id));\n                break;\n            case self.FIRST_REFLECTION_SESSION: // First reflection session (1st page) \"Text3\"\n                form.getTextField(fieldName).setText(user.reflections[0].plaintext);\n                break;\n            case \"Dropdown1\": // Month\n                form.getDropdown(fieldName).select((new Date(user.reflections[0].month * 1000)).toLocaleString('default', { month: 'long' }));\n                break;\n            case \"Dropdown2\": // DP\n                form.getDropdown(fieldName).select(String(user.dp)); // just to make sure that we are sending a string\n                break;\n            case self.FIRST_REFLECTION_SESSION_SUPERVISOR_INITIALS: // Supervisor initials \"Text5\"\n                form.getTextField(fieldName).setText(String(user.si));\n                break;\n            case self.INTERIM_REFLECTION: // Interim reflection (2nd page) \"Text6\"\n                form.getTextField(fieldName).setText(user.reflections[1].plaintext);\n                break;\n            case \"Dropdown3\": // Month\n                form.getDropdown(fieldName).select((new Date(user.reflections[1].month * 1000)).toLocaleString('default', { month: 'long' }));\n                break;\n            case \"Dropdown4\": // DP\n                form.getDropdown(fieldName).select(String(user.dp));\n                break;\n            case self.INTERIM_REFLECTION_SUPERVISOR_INITIALS: // Supervisor initials \"Text8\"\n                form.getTextField(fieldName).setText(String(user.si));\n                break;\n            case self.FINAL_REFLECTION: // Final reflection (3rd page) \"Text9\"\n                form.getTextField(fieldName).setText(user.reflections[2].plaintext);\n                break;\n            case \"Dropdown5\": // Month\n                form.getDropdown(fieldName).select((new Date(user.reflections[2].month * 1000)).toLocaleString('default', { month: 'long' }));\n                break;\n            case \"Dropdown6\": //DP //dp\n                form.getDropdown(fieldName).select(String(user.dp));\n                break;\n            case self.FINAL_REFLECTION_SUPERVISOR_INITIALS: // Supervisor initials \"Text11\"\n                form.getTextField(fieldName).setText(String(user.si));\n                break;\n        }\n    };\n\n    // Call WS to save pdf data in DB.\n    Controls.prototype.savePDFInDB = function (pdfs) {\n        var self = this;\n\n        const pdfjson = JSON.stringify(pdfs);\n        Ajax.call([{\n            methodname: \"report_reflectionexporter_save_pdfbase64\",\n            args: {\n                pdfs: pdfjson,\n            },\n            done: function (response) {\n\n                const context = {\n                    pdfjson: response.savedrecords,\n                    courseid: self.data.cid,\n                    coursename: self.data.coursename,\n                    showuseridentity: true,\n                    reflecid: self.data.rid,\n                    firstuserid: 0,\n                }\n\n                Templates.render('report_reflectionexporter/viewer', context)\n                    .done(function (html, js) {\n                        $(document.querySelector('.importing-animation')).fadeOut(\"fast\", function () {\n                            Templates.replaceNodeContents($(document.querySelector('.importing-animation')), html, js);\n                            $(document.querySelector('.importing-animation')).fadeIn(\"fast\");\n                        }.bind(this));\n                    }).fail(function (ex) {\n                        console.log(ex);\n                    });\n\n            },\n            fail: function (reason) {\n                Log.error(reason);\n            },\n        },]);\n\n    }\n\n    Controls.prototype.displayTemplate = function () {\n        var self = this;\n        const context = {\n            pdfjson: self.data.pdfjson,\n            courseid: self.data.cid,\n            coursename: self.data.coursename,\n            showuseridentity: true,\n            reflecid: self.data.rid,\n            firstuserid: 0,\n        }\n\n        Templates.render('report_reflectionexporter/viewer', context)\n            .done(function (html, js) {\n                $(document.querySelector('.importing-animation')).fadeOut(\"fast\", function () {\n                    Templates.replaceNodeContents($(document.querySelector('.importing-animation')), html, js);\n                    $(document.querySelector('.importing-animation')).fadeIn(\"fast\");\n                }.bind(this));\n            }).fail(function (ex) {\n                console.log(ex);\n            });\n    }\n\n    return {\n        init: init,\n    };\n});"],"names":["define","$","Ajax","Log","PDFLib","Templates","Controls","data","CANDIDATE_PERSONAL_CODE","FIRST_REFLECTION_SESSION","FIRST_REFLECTION_SESSION_SUPERVISOR_INITIALS","INTERIM_REFLECTION","INTERIM_REFLECTION_SUPERVISOR_INITIALS","FINAL_REFLECTION","FINAL_REFLECTION_SUPERVISOR_INITIALS","SUPERVISOR_COMMENT","prototype","main","this","new","getreflectionsjson","getreflectionspdf","displayTemplate","async","self","call","methodname","args","rid","done","response","users","JSON","parse","reflecjson","pdfs","processReflections","savePDFInDB","fail","reason","error","studentpdfs","i","length","pdf","fillformAndSave","student","uid","reflections","userid","courseid","cid","push","user","formUrl","fileurl","formPdfBytes","fetch","then","res","arrayBuffer","pdfDoc","PDFDocument","load","form","getForm","getFields","forEach","field","setFormFields","saveAsBase64","fieldName","getName","console","log","Y","getTextField","setText","String","id","plaintext","getDropdown","select","Date","month","toLocaleString","dp","si","pdfjson","stringify","context","savedrecords","coursename","showuseridentity","reflecid","firstuserid","render","html","js","document","querySelector","fadeOut","replaceNodeContents","fadeIn","bind","ex","init"],"mappings":"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"}