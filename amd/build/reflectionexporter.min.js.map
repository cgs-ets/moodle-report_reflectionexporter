{"version":3,"file":"reflectionexporter.min.js","sources":["../src/reflectionexporter.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n *\r\n * Gets the Extended Essay (EE) ib form in PDF format and imports the\r\n * reflections into it.\r\n *\r\n * @package    report\r\n * @subpackage reflectionexporter\r\n * @copyright  2022 Veronica Bermegui\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\ndefine([\r\n    \"jquery\",\r\n    \"core/ajax\",\r\n    \"core/log\",\r\n    \"report_reflectionexporter/pdf-lib\",\r\n    \"core/templates\",\r\n\r\n], function ($, Ajax, Log, PDFLib, Templates) {\r\n    \"use strict\";\r\n\r\n    function init(data) {\r\n        var control = new Controls(data);\r\n        control.main();\r\n    }\r\n\r\n    function Controls(data) {\r\n        this.data = data;\r\n        this.CANDIDATE_PERSONAL_CODE = 'Text1';\r\n        this.FIRST_REFLECTION_SESSION = 'Text3';\r\n        this.FIRST_REFLECTION_SESSION_SUPERVISOR_INITIALS = 'Text5';\r\n        this.INTERIM_REFLECTION = 'Text6';\r\n        this.INTERIM_REFLECTION_SUPERVISOR_INITIALS = 'Text8';\r\n        this.FINAL_REFLECTION = 'Text9';\r\n        this.FINAL_REFLECTION_SUPERVISOR_INITIALS = 'Text11';\r\n        this.SUPERVISOR_COMMENT = 'Text12';\r\n    }\r\n\r\n    /**\r\n     * Run the controller.\r\n     *\r\n     */\r\n    Controls.prototype.main = function () {\r\n        // Get the reflections data.\r\n\r\n        if (this.data.new == 1) {\r\n            this.getreflectionsjson()\r\n\r\n        } else {\r\n            this.getreflectionspdf();\r\n        }\r\n\r\n    };\r\n\r\n    Controls.prototype.getreflectionspdf = function () {\r\n\r\n        this.displayTemplate();\r\n    }\r\n\r\n    Controls.prototype.getreflectionsjson = async function () {\r\n        var self = this;\r\n\r\n        Ajax.call([{\r\n            methodname: \"report_reflectionexporter_get_reflections\",\r\n            args: {\r\n                rid: this.data.rid,\r\n            },\r\n            done: async function (response) {\r\n                const users = JSON.parse(response.reflecjson);\r\n                const pdfs = await self.processReflections(users);\r\n\r\n                self.savePDFInDB(pdfs);\r\n\r\n            },\r\n            fail: function (reason) {\r\n                Log.error(reason);\r\n            },\r\n        },]);\r\n    };\r\n\r\n    // Returns an array with the users PDF enconded in base64\r\n    Controls.prototype.processReflections = async function (users) {\r\n        const studentpdfs = [];\r\n        for (var i = 0; i < users.length; i++) {\r\n            const pdf = await this.fillformAndSave(users[i]);\r\n\r\n            const student = {\r\n                uid: users[i].reflections[0].userid,\r\n                courseid: this.data.cid,\r\n                rid: this.data.rid,\r\n                formname: this.data.ibform,\r\n                pdf: pdf\r\n            };\r\n\r\n            studentpdfs.push(student);\r\n\r\n        }\r\n\r\n        return studentpdfs;\r\n\r\n    };\r\n    // Fill PDF with data and return the generted file in base64\r\n    Controls.prototype.fillformAndSave = async function (user) {\r\n        const formUrl = this.data.fileurl;\r\n        const formPdfBytes = await fetch(formUrl).then((res) => res.arrayBuffer());\r\n        const pdfDoc = await PDFLib.PDFDocument.load(formPdfBytes);\r\n        const form = pdfDoc.getForm();\r\n        const fields = form.getFields();\r\n\r\n        fields.forEach((field) => {\r\n            this.setFormFields(user, form, field);\r\n        });\r\n\r\n        // Return the base64 PDF\r\n        return await pdfDoc.saveAsBase64();\r\n\r\n    };\r\n    /**\r\n     * Fields to complete for the student\r\n     *  Candidate personal code: Text1\r\n     * First reflection session: Text3\r\n     *  Month first page: Dropdown1\r\n     *  DP: Dropdown2\r\n     *  supervisor id: Text5\r\n     * Second reflection: Text6\r\n     *  Month second page: Dropdown3\r\n     *  DP: Dropdown4\r\n     *  supervisor id: Text8\r\n     *  third reflection: Text9\r\n     *  Month third page: Dropdown5\r\n     *  DP: Dropdown6\r\n     *  supervisor id: Text11\r\n     *\r\n     * @param {*} user\r\n     * @param {*} form\r\n     * @param {*} field\r\n     */\r\n    Controls.prototype.setFormFields = async function (user, form, field) {\r\n        var self = this;\r\n        const fieldName = field.getName();\r\n        switch (fieldName) {\r\n            case self.CANDIDATE_PERSONAL_CODE: //Candaite personal code \"Text1\"\r\n                Y.log(user);\r\n                form.getTextField(fieldName).setText(String(user.id));\r\n                break;\r\n            case self.FIRST_REFLECTION_SESSION: // First reflection session (1st page) \"Text3\"\r\n                form.getTextField(fieldName).setText(JSON.parse(user.reflections[0].onlinetext));\r\n                break;\r\n            case \"Dropdown1\": // Month\r\n                form.getDropdown(fieldName).select(user.reflections[0].month);\r\n                break;\r\n            case \"Dropdown2\": // DP\r\n                form.getDropdown(fieldName).select(String(user.dp)); // just to make sure that we are sending a string\r\n                break;\r\n            case self.FIRST_REFLECTION_SESSION_SUPERVISOR_INITIALS: // Supervisor initials \"Text5\"\r\n                form.getTextField(fieldName).setText(String(user.si));\r\n                break;\r\n            case self.INTERIM_REFLECTION: // Interim reflection (2nd page) \"Text6\"\r\n                form.getTextField(fieldName).setText(JSON.parse(user.reflections[1].onlinetext));\r\n                console.log(JSON.parse(user.reflections[1].onlinetext))\r\n\r\n                break;\r\n            case \"Dropdown3\": // Month\r\n                form.getDropdown(fieldName).select(user.reflections[1].month);\r\n                break;\r\n            case \"Dropdown4\": // DP\r\n                form.getDropdown(fieldName).select(String(user.dp));\r\n                break;\r\n            case self.INTERIM_REFLECTION_SUPERVISOR_INITIALS: // Supervisor initials \"Text8\"\r\n                form.getTextField(fieldName).setText(String(user.si));\r\n                break;\r\n            case self.FINAL_REFLECTION: // Final reflection (3rd page) \"Text9\"\r\n                form.getTextField(fieldName).setText(JSON.parse(user.reflections[2].onlinetext));\r\n                break;\r\n            case \"Dropdown5\": // Month\r\n                form.getDropdown(fieldName).select(user.reflections[2].month);\r\n                break;\r\n            case \"Dropdown6\": //DP //dp\r\n                form.getDropdown(fieldName).select(String(user.dp));\r\n                break;\r\n            case self.FINAL_REFLECTION_SUPERVISOR_INITIALS: // Supervisor initials \"Text11\"\r\n                form.getTextField(fieldName).setText(String(user.si));\r\n                break;\r\n        }\r\n    };\r\n\r\n    // Call WS to save pdf data in DB.\r\n    Controls.prototype.savePDFInDB = function (pdfs) {\r\n        var self = this;\r\n\r\n        const pdfjson = JSON.stringify(pdfs);\r\n        Ajax.call([{\r\n            methodname: \"report_reflectionexporter_save_pdfbase64\",\r\n            args: {\r\n                pdfs: pdfjson,\r\n            },\r\n            done: function (response) {\r\n\r\n                const context = {\r\n                    pdfjson: response.savedrecords,\r\n                    courseid: self.data.cid,\r\n                    coursename: self.data.coursename,\r\n                    showuseridentity: true,\r\n                    reflecid: self.data.rid,\r\n                    formname: self.data.ibform,\r\n                    firstuserid: 0,\r\n                }\r\n\r\n                Templates.render('report_reflectionexporter/viewer', context)\r\n                    .done(function (html, js) {\r\n                        $(document.querySelector('.importing-animation')).fadeOut(\"fast\", function () {\r\n                            Templates.replaceNodeContents($(document.querySelector('.importing-animation')), html, js);\r\n                            $(document.querySelector('.importing-animation')).fadeIn(\"fast\");\r\n                        }.bind(this));\r\n                    }).fail(function (ex) {\r\n                        console.log(ex);\r\n                    });\r\n\r\n            },\r\n            fail: function (reason) {\r\n                Log.error(reason);\r\n            },\r\n        },]);\r\n\r\n    }\r\n\r\n    Controls.prototype.displayTemplate = function () {\r\n        var self = this;\r\n        const context = {\r\n            pdfjson: self.data.pdfjson,\r\n            courseid: self.data.cid,\r\n            coursename: self.data.coursename,\r\n            showuseridentity: true,\r\n            reflecid: self.data.rid,\r\n            firstuserid: 0,\r\n        }\r\n\r\n        Templates.render('report_reflectionexporter/viewer', context)\r\n            .done(function (html, js) {\r\n                $(document.querySelector('.importing-animation')).fadeOut(\"fast\", function () {\r\n                    Templates.replaceNodeContents($(document.querySelector('.importing-animation')), html, js);\r\n                    $(document.querySelector('.importing-animation')).fadeIn(\"fast\");\r\n                }.bind(this));\r\n            }).fail(function (ex) {\r\n                console.log(ex);\r\n            });\r\n    }\r\n\r\n    return {\r\n        init: init,\r\n    };\r\n});"],"names":["define","$","Ajax","Log","PDFLib","Templates","Controls","data","CANDIDATE_PERSONAL_CODE","FIRST_REFLECTION_SESSION","FIRST_REFLECTION_SESSION_SUPERVISOR_INITIALS","INTERIM_REFLECTION","INTERIM_REFLECTION_SUPERVISOR_INITIALS","FINAL_REFLECTION","FINAL_REFLECTION_SUPERVISOR_INITIALS","SUPERVISOR_COMMENT","prototype","main","this","new","getreflectionsjson","getreflectionspdf","displayTemplate","async","self","call","methodname","args","rid","done","response","users","JSON","parse","reflecjson","pdfs","processReflections","savePDFInDB","fail","reason","error","studentpdfs","i","length","pdf","fillformAndSave","student","uid","reflections","userid","courseid","cid","formname","ibform","push","user","formUrl","fileurl","formPdfBytes","fetch","then","res","arrayBuffer","pdfDoc","PDFDocument","load","form","getForm","getFields","forEach","field","setFormFields","saveAsBase64","fieldName","getName","Y","log","getTextField","setText","String","id","onlinetext","getDropdown","select","month","dp","si","console","pdfjson","stringify","context","savedrecords","coursename","showuseridentity","reflecid","firstuserid","render","html","js","document","querySelector","fadeOut","replaceNodeContents","fadeIn","bind","ex","init"],"mappings":"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"}