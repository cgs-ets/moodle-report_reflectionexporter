{"version":3,"file":"tokexporter.min.js","sources":["../src/tokexporter.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Gets the Theory of Knowledge (TOK) ib form in PDF format and imports the\n * interactions and teacher comments into it.\n *\n * @package    report\n * @subpackage reflectionexporter\n * @copyright  2023 Veronica Bermegui\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\ndefine([\n    \"jquery\",\n    \"core/ajax\",\n    \"core/log\",\n    \"report_reflectionexporter/pdf-lib\",\n    \"core/templates\",\n    \"report_reflectionexporter/reflectionexporterHelper\",\n\n], function ($, Ajax, Log, PDFLib, Templates, ReHelper) {\n    \"use strict\";\n\n    function init(data) {\n        var control = new Controls(data);\n        control.main();\n    }\n\n    /**\n     * The TextX name are the names the ib form in PDF format ha given to the fields.\n     * @param {*} data\n     */\n    function Controls(data) {\n\n        this.data = data;\n        this.tokFormInputs = ReHelper.get_tok_form_inputs();\n    }\n\n    /**\n     * Run the controller.\n     *\n     */\n    Controls.prototype.main = function () {\n        // Get the interactions data.\n\n        if (this.data.new == 1) {\n            this.getInteractionsjson()\n        } else {\n            this.getInteractionspdf();\n        }\n\n    };\n\n    Controls.prototype.getInteractionspdf = function () {\n\n        this.displayTemplate();\n    }\n\n    Controls.prototype.getInteractionsjson = async function () {\n        var self = this;\n\n        Ajax.call([{\n            methodname: \"report_reflectionexporter_get_reflections\",\n            args: {\n                rid: this.data.rid,\n            },\n            done: async function (response) {\n                const users = JSON.parse(response.reflecjson);\n                const pdfs = await self.processInteractions(users);\n                self.savePDFInDB(pdfs);\n\n            },\n            fail: function (reason) {\n                Log.error(reason);\n            },\n        },]);\n    };\n\n    /**\n     *  For each student, fill the form with the\n     *  data needed.\n     * @param {*} users\n     * @returns\n     */\n    Controls.prototype.processInteractions = async function (users) {\n        const studentpdfs = [];\n        for (var i = 0; i < users.length; i++) {\n            const pdf = await this.fillformAndSave(users[i]);\n            const student = {\n                uid: users[i].interactions[0].userid,\n                courseid: this.data.cid,\n                rid: this.data.rid,\n                pdf: pdf,\n                formname: this.data.ibform\n            };\n\n            studentpdfs.push(student);\n\n        }\n\n        return studentpdfs;\n\n    };\n\n    // Fill PDF with data and return the generted file in base64\n    Controls.prototype.fillformAndSave = async function (user) {\n        const formUrl = this.data.fileurl;\n        const formPdfBytes = await fetch(formUrl).then((res) => res.arrayBuffer());\n        const pdfDoc = await PDFLib.PDFDocument.load(formPdfBytes);\n        const form = pdfDoc.getForm();\n        const fields = form.getFields();\n\n        fields.forEach((field) => {\n            this.setFormFields(user, form, field);\n        });\n\n        // Return the base64 PDF\n        return await pdfDoc.saveAsBase64();\n\n    };\n\n    /**\n   * Fields to complete in the form.\n   * @param {*} user\n   * @param {*} form\n   * @param {*} field\n   */\n    Controls.prototype.setFormFields = async function (user, form, field) {\n        var self = this;\n        const fieldName = field.getName();\n\n        switch (fieldName) {\n            case self.tokFormInputs.CANDIDATE_PERSONAL_CODE:\n                form.getTextField(fieldName).setText(String(user.id));\n                break;\n            case self.tokFormInputs.SESSION:\n                form.getTextField(fieldName).setText(String(user.session));\n                break;\n            case self.tokFormInputs.PRESCRIBED_TITLE:\n                form.getTextField(fieldName).setText(String(user.prescribedtitle));\n                break;\n            case self.tokFormInputs.FIRST_INTERACTION_CANDIDATE_COMMENTS:\n\n                form.getTextField(fieldName).setText((user.interactions[0].onlinetext).replaceAll('\"',''));\n                break;\n            case self.tokFormInputs.FIRST_INTERACTION_CANDIDATE_DATE:\n                form.getTextField(fieldName).setText(user.interactions[0].month);\n                break;\n            case self.tokFormInputs.SECOND_INTERACTION_CANDIDATE_COMMENTS:\n                form.getTextField(fieldName).setText((user.interactions[1].onlinetext).replaceAll('\"',''));\n                break;\n            case self.tokFormInputs.SECOND_INTERACTION_CANDIDATE_DATE:\n                form.getTextField(fieldName).setText(user.interactions[1].month);\n                break;\n            case self.tokFormInputs.THIRD_INTERACTION_CANDIDATE_COMMENTS:\n                form.getTextField(fieldName).setText((user.interactions[2].onlinetext.replaceAll('\"','')));\n                break;\n            case self.tokFormInputs.THIRD_INTERACTION_CANDIDATE_DATE:\n                form.getTextField(fieldName).setText(user.interactions[2].month);\n                break;\n            case self.tokFormInputs.TEACHER_COMMENTS:\n                form.getTextField(fieldName).setText(user.comments);\n                break;\n            case self.tokFormInputs.COMPLETED_CANDIDATE_NAME:\n                form.getTextField(fieldName).setText(`${user.firstname} ${user.lastname}`);\n                break;\n            case self.tokFormInputs.COMPLETED_CANDIDATE_SESSION_NUMBER:\n                form.getTextField(fieldName).setText(user.session);\n                break;\n            case self.tokFormInputs.COMPLETED_DECLARATION_DATE1:\n                form.getTextField(fieldName).setText(user.month);\n                break;\n            case self.tokFormInputs.COMPLETED_DECLARATION_TEACHER_NAME:\n                form.getTextField(fieldName).setText(user.teachersname);\n                break;\n            case self.tokFormInputs.COMPLETED_DECLARATION_DATE2:\n                form.getTextField(fieldName).setText(user.month);\n                break;\n            case self.tokFormInputs.COMPLETED_DECLARATION_SCHOOL_NAME:\n                form.getTextField(fieldName).setText(user.schoolname);\n                break;\n            case self.tokFormInputs.COMPLETED_DECLARATION_SCHOOL_NUMBER:\n                form.getTextField(fieldName).setText(user.schoolnumber);\n                break;\n\n        }\n    };\n\n    // Call WS to save pdf data in DB (table mdl_report_reflec_exporter_pdf).\n    Controls.prototype.savePDFInDB = function (pdfs) {\n        var self = this;\n\n        const pdfjson = JSON.stringify(pdfs);\n\n        Ajax.call([{\n            methodname: \"report_reflectionexporter_save_pdfbase64\",\n            args: {\n                pdfs: pdfjson,\n            },\n            done: function (response) {\n                const downloadurl = new URL(window.location.href);\n                downloadurl.searchParams.append('d', 1);\n                const context = {\n                    pdfjson: response.savedrecords,\n                    courseid: self.data.cid,\n                    coursename: self.data.coursename,\n                    showuseridentity: true,\n                    reflecid: self.data.rid,\n                    firstuserid: 0,\n                }\n\n                Templates.render('report_reflectionexporter/viewer', context)\n                .done(function (html, js) {\n                    $(document.querySelector('.importing-animation')).fadeOut(\"fast\", function () {\n                        Templates.replaceNodeContents($(document.querySelector('.importing-animation')), html, js);\n                        $(document.querySelector('.importing-animation')).fadeIn(\"fast\");\n                    }.bind(this));\n                }).fail(function (ex) {\n                    console.log(ex);\n                });\n\n            },\n            fail: function (reason) {\n                Log.error(reason);\n            },\n        },]);\n\n    }\n\n    Controls.prototype.displayTemplate = function () {\n        var self = this;\n        const context = {\n            pdfjson: self.data.pdfjson,\n            courseid: self.data.cid,\n            coursename: self.data.coursename,\n            showuseridentity: true,\n            reflecid: self.data.rid,\n            firstuserid: 0,\n            // tkform: self.data.ibform === 'TK_PPF',\n        }\n\n        console.log(context);\n\n        Templates.render('report_reflectionexporter/viewer', context)\n            .done(function (html, js) {\n                $(document.querySelector('.importing-animation')).fadeOut(\"fast\", function () {\n                    Templates.replaceNodeContents($(document.querySelector('.importing-animation')), html, js);\n                    $(document.querySelector('.importing-animation')).fadeIn(\"fast\");\n                }.bind(this));\n            }).fail(function (ex) {\n                console.log(ex);\n            });\n    }\n\n    return {\n        init: init,\n    };\n\n\n\n\n})\n"],"names":["define","$","Ajax","Log","PDFLib","Templates","ReHelper","Controls","data","tokFormInputs","get_tok_form_inputs","prototype","main","this","new","getInteractionsjson","getInteractionspdf","displayTemplate","async","self","call","methodname","args","rid","done","response","users","JSON","parse","reflecjson","pdfs","processInteractions","savePDFInDB","fail","reason","error","studentpdfs","i","length","pdf","fillformAndSave","student","uid","interactions","userid","courseid","cid","formname","ibform","push","user","formUrl","fileurl","formPdfBytes","fetch","then","res","arrayBuffer","pdfDoc","PDFDocument","load","form","getForm","getFields","forEach","field","setFormFields","saveAsBase64","fieldName","getName","CANDIDATE_PERSONAL_CODE","getTextField","setText","String","id","SESSION","session","PRESCRIBED_TITLE","prescribedtitle","FIRST_INTERACTION_CANDIDATE_COMMENTS","onlinetext","replaceAll","FIRST_INTERACTION_CANDIDATE_DATE","month","SECOND_INTERACTION_CANDIDATE_COMMENTS","SECOND_INTERACTION_CANDIDATE_DATE","THIRD_INTERACTION_CANDIDATE_COMMENTS","THIRD_INTERACTION_CANDIDATE_DATE","TEACHER_COMMENTS","comments","COMPLETED_CANDIDATE_NAME","firstname","lastname","COMPLETED_CANDIDATE_SESSION_NUMBER","COMPLETED_DECLARATION_DATE1","COMPLETED_DECLARATION_TEACHER_NAME","teachersname","COMPLETED_DECLARATION_DATE2","COMPLETED_DECLARATION_SCHOOL_NAME","schoolname","COMPLETED_DECLARATION_SCHOOL_NUMBER","schoolnumber","pdfjson","stringify","URL","window","location","href","searchParams","append","context","savedrecords","coursename","showuseridentity","reflecid","firstuserid","render","html","js","document","querySelector","fadeOut","replaceNodeContents","fadeIn","bind","ex","console","log","init"],"mappings":"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"}