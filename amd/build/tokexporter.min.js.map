{"version":3,"file":"tokexporter.min.js","sources":["../src/tokexporter.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Gets the Theory of Knowledge (TOK) ib form in PDF format and imports the\n * interactions and teacher comments into it.\n *\n * @package    report\n * @subpackage reflectionexporter\n * @copyright  2023 Veronica Bermegui\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\ndefine([\n    \"jquery\",\n    \"core/ajax\",\n    \"core/log\",\n    \"report_reflectionexporter/pdf-lib\",\n    \"core/templates\",\n\n], function ($, Ajax, Log, PDFLib, Templates) {\n    \"use strict\";\n\n    function init(data) {\n        var control = new Controls(data);\n        control.main();\n    }\n\n    /**\n     * The TextX name are the names the ib form in PDF format ha given to the fields.\n     * @param {*} data\n     */\n    function Controls(data) {\n\n        this.data = data;\n        this.CANDIDATE_PERSONAL_CODE = 'Text1';\n        this.SESSION = 'Text2';\n        this.PRESCRIBED_TITLE = 'Text3';\n        this.FIRST_INTERACTION_CANDIDATE_COMMENTS = 'Text4';\n        this.FIRST_INTERACTION_CANDIDATE_DATE = 'Text5';\n        this.SECOND_INTERACTION_CANDIDATE_COMMENTS = 'Text6';\n        this.SECOND_INTERACTION_CANDIDATE_DATE = 'Text7';\n        this.THIRD_INTERACTION_CANDIDATE_COMMENTS = 'Text8';\n        this.THIRD_INTERACTION_CANDIDATE_DATE = 'Text9';\n        this.TEACHER_COMMENTS = 'Text10';\n        this.COMPLETED_CANDIDATE_NAME = 'Text11';\n        this.COMPLETED_CANDIDATE_SESSION_NUMBER = 'Text12';\n        this.COMPLETED_DECLARATION_DATE1 = 'Text13';\n        this.COMPLETED_DECLARATION_TEACHER_NAME = 'Text14';\n        this.COMPLETED_DECLARATION_DATE2 = 'Text15';\n        this.COMPLETED_DECLARATION_SCHOOL_NAME = 'Text16';\n        this.COMPLETED_DECLARATION_SCHOOL_NUMBER = 'Text17';\n\n    }\n\n    /**\n     * Run the controller.\n     *\n     */\n    Controls.prototype.main = function () {\n        // Get the interactions data.\n\n        if (this.data.new == 1) {\n            this.getInteractionsjson()\n        } else {\n            this.getInteractionspdf();\n        }\n\n    };\n\n    Controls.prototype.getInteractionspdf = function () {\n\n        this.displayTemplate();\n    }\n\n    Controls.prototype.getInteractionsjson = async function () {\n        var self = this;\n\n        Ajax.call([{\n            methodname: \"report_reflectionexporter_get_reflections\",\n            args: {\n                rid: this.data.rid,\n            },\n            done: async function (response) {\n                const users = JSON.parse(response.reflecjson);\n                const pdfs = await self.processInteractions(users);\n                self.savePDFInDB(pdfs);\n\n            },\n            fail: function (reason) {\n                Log.error(reason);\n            },\n        },]);\n    };\n\n    /**\n     *  For each student, fill the form with the\n     *  data needed.\n     * @param {*} users\n     * @returns\n     */\n    Controls.prototype.processInteractions = async function (users) {\n        const studentpdfs = [];\n        for (var i = 0; i < users.length; i++) {\n            const pdf = await this.fillformAndSave(users[i]);\n            const student = {\n                uid: users[i].interactions[0].userid,\n                courseid: this.data.cid,\n                rid: this.data.rid,\n                pdf: pdf,\n                formname: this.data.ibform\n            };\n\n            studentpdfs.push(student);\n\n        }\n\n        return studentpdfs;\n\n    };\n\n    // Fill PDF with data and return the generted file in base64\n    Controls.prototype.fillformAndSave = async function (user) {\n        const formUrl = this.data.fileurl;\n        const formPdfBytes = await fetch(formUrl).then((res) => res.arrayBuffer());\n        const pdfDoc = await PDFLib.PDFDocument.load(formPdfBytes);\n        const form = pdfDoc.getForm();\n        const fields = form.getFields();\n\n        fields.forEach((field) => {\n            this.setFormFields(user, form, field);\n        });\n\n        // Return the base64 PDF\n        return await pdfDoc.saveAsBase64();\n\n    };\n\n    /**\n   * Fields to complete in the form.\n   * @param {*} user\n   * @param {*} form\n   * @param {*} field\n   */\n    Controls.prototype.setFormFields = async function (user, form, field) {\n        var self = this;\n        const fieldName = field.getName();\n\n        switch (fieldName) {\n            case self.CANDIDATE_PERSONAL_CODE:\n                form.getTextField(fieldName).setText(String(user.id));\n                break;\n            case self.SESSION:\n                form.getTextField(fieldName).setText(String(user.session));\n                break;\n            case self.PRESCRIBED_TITLE:\n                form.getTextField(fieldName).setText(String(user.prescribedtitle));\n                break;\n            case self.FIRST_INTERACTION_CANDIDATE_COMMENTS:\n\n                form.getTextField(fieldName).setText((user.interactions[0].onlinetext).replaceAll('\"',''));\n                break;\n            case self.FIRST_INTERACTION_CANDIDATE_DATE:\n                form.getTextField(fieldName).setText(user.interactions[0].month);\n                break;\n            case self.SECOND_INTERACTION_CANDIDATE_COMMENTS:\n                form.getTextField(fieldName).setText((user.interactions[1].onlinetext).replaceAll('\"',''));\n                break;\n            case self.SECOND_INTERACTION_CANDIDATE_DATE:\n                form.getTextField(fieldName).setText(user.interactions[1].month);\n                break;\n            case self.THIRD_INTERACTION_CANDIDATE_COMMENTS:\n                form.getTextField(fieldName).setText((user.interactions[2].onlinetext.replaceAll('\"','')));\n                break;\n            case self.THIRD_INTERACTION_CANDIDATE_DATE:\n                form.getTextField(fieldName).setText(user.interactions[2].month);\n                break;\n            case self.TEACHER_COMMENTS:\n                form.getTextField(fieldName).setText(user.comments);\n                break;\n            case self.COMPLETED_CANDIDATE_NAME:\n                form.getTextField(fieldName).setText(`${user.firstname} ${user.lastname}`);\n                break;\n            case self.COMPLETED_CANDIDATE_SESSION_NUMBER:\n                form.getTextField(fieldName).setText(user.session);\n                break;\n            case self.COMPLETED_DECLARATION_DATE1:\n                form.getTextField(fieldName).setText(user.month);\n                break;\n            case self.COMPLETED_DECLARATION_TEACHER_NAME:\n                form.getTextField(fieldName).setText(user.teachersname);\n                break;\n            case self.COMPLETED_DECLARATION_DATE2:\n                form.getTextField(fieldName).setText(user.month);\n                break;\n            case self.COMPLETED_DECLARATION_SCHOOL_NAME:\n                form.getTextField(fieldName).setText(user.schoolname);\n                break;\n            case self.COMPLETED_DECLARATION_SCHOOL_NUMBER:\n                form.getTextField(fieldName).setText(user.schoolnumber);\n                break;\n\n        }\n    };\n\n    // Call WS to save pdf data in DB (table mdl_report_reflec_exporter_pdf).\n    Controls.prototype.savePDFInDB = function (pdfs) {\n        var self = this;\n\n        const pdfjson = JSON.stringify(pdfs);\n\n        Ajax.call([{\n            methodname: \"report_reflectionexporter_save_pdfbase64\",\n            args: {\n                pdfs: pdfjson,\n            },\n            done: function (response) {\n                const downloadurl = new URL(window.location.href);\n                downloadurl.searchParams.append('d', 1);\n                const context = {\n                    pdfjson: response.savedrecords,\n                    courseid: self.data.cid,\n                    coursename: self.data.coursename,\n                    showuseridentity: true,\n                    reflecid: self.data.rid,\n                    firstuserid: 0,\n                    downloadaction: downloadurl,\n                }\n\n                Templates.render('report_reflectionexporter/tok_viewer', context)\n                .done(function (html, js) {\n                    $(document.querySelector('.importing-animation')).fadeOut(\"fast\", function () {\n                        Templates.replaceNodeContents($(document.querySelector('.importing-animation')), html, js);\n                        $(document.querySelector('.importing-animation')).fadeIn(\"fast\");\n                    }.bind(this));\n                }).fail(function (ex) {\n                    console.log(ex);\n                });\n\n            },\n            fail: function (reason) {\n                Log.error(reason);\n            },\n        },]);\n\n    }\n\n    Controls.prototype.displayTemplate = function () {\n        var self = this;\n        const context = {\n            pdfjson: self.data.pdfjson,\n            courseid: self.data.cid,\n            coursename: self.data.coursename,\n            showuseridentity: true,\n            reflecid: self.data.rid,\n            firstuserid: 0,\n        }\n\n        Templates.render('report_reflectionexporter/tok_viewer', context)\n        .done(function (html, js) {\n            $(document.querySelector('.importing-animation')).fadeOut(\"fast\", function () {\n                Templates.replaceNodeContents($(document.querySelector('.importing-animation')), html, js);\n                $(document.querySelector('.importing-animation')).fadeIn(\"fast\");\n            }.bind(this));\n        }).fail(function (ex) {\n            console.log(ex);\n        });\n    }\n\n    return {\n        init: init,\n    };\n\n\n\n\n})\n"],"names":["define","$","Ajax","Log","PDFLib","Templates","Controls","data","CANDIDATE_PERSONAL_CODE","SESSION","PRESCRIBED_TITLE","FIRST_INTERACTION_CANDIDATE_COMMENTS","FIRST_INTERACTION_CANDIDATE_DATE","SECOND_INTERACTION_CANDIDATE_COMMENTS","SECOND_INTERACTION_CANDIDATE_DATE","THIRD_INTERACTION_CANDIDATE_COMMENTS","THIRD_INTERACTION_CANDIDATE_DATE","TEACHER_COMMENTS","COMPLETED_CANDIDATE_NAME","COMPLETED_CANDIDATE_SESSION_NUMBER","COMPLETED_DECLARATION_DATE1","COMPLETED_DECLARATION_TEACHER_NAME","COMPLETED_DECLARATION_DATE2","COMPLETED_DECLARATION_SCHOOL_NAME","COMPLETED_DECLARATION_SCHOOL_NUMBER","prototype","main","this","new","getInteractionsjson","getInteractionspdf","displayTemplate","async","self","call","methodname","args","rid","done","response","users","JSON","parse","reflecjson","pdfs","processInteractions","savePDFInDB","fail","reason","error","studentpdfs","i","length","pdf","fillformAndSave","student","uid","interactions","userid","courseid","cid","formname","ibform","push","user","formUrl","fileurl","formPdfBytes","fetch","then","res","arrayBuffer","pdfDoc","PDFDocument","load","form","getForm","getFields","forEach","field","setFormFields","saveAsBase64","fieldName","getName","getTextField","setText","String","id","session","prescribedtitle","onlinetext","replaceAll","month","comments","firstname","lastname","teachersname","schoolname","schoolnumber","pdfjson","stringify","downloadurl","URL","window","location","href","searchParams","append","context","savedrecords","coursename","showuseridentity","reflecid","firstuserid","downloadaction","render","html","js","document","querySelector","fadeOut","replaceNodeContents","fadeIn","bind","ex","console","log","init"],"mappings":"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"}